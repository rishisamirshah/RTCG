# Server configuration
server.port=${PORT:8080}
server.servlet.context-path=/
server.forward-headers-strategy=NATIVE

# Database configuration (PostgreSQL for Render) - COMPLETELY DISABLE SQLITE
# Explicit driver class to prevent SQLite from being used
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# Hibernate properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# Use validate mode in production once schema is created
spring.jpa.hibernate.ddl-auto=update

# Enable SQL schema initialization in production
spring.sql.init.mode=always
spring.sql.init.platform=postgres
spring.sql.init.schema-locations=classpath:schema-postgres.sql
spring.sql.init.enabled=true

# Enable data initializers in production to add card data
app.data.initialize=true

# CORS configuration
spring.web.cors.allowed-origins=https://your-shopify-store.myshopify.com, http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Logging for troubleshooting
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.zaxxer.hikari=DEBUG

# Security configuration
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store-type=${SSL_TYPE:PKCS12}
server.ssl.key-store=${SSL_KEYSTORE:}
server.ssl.key-store-password=${SSL_PASSWORD:}

# Static resources configuration
spring.web.resources.cache.cachecontrol.max-age=365d
spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.strategy.content.paths=/** 